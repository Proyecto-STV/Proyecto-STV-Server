/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package view;

import business.Server;
import javax.swing.JOptionPane;

/**
 *
 * @author Nelson
 */
public class VotingCounter extends javax.swing.JPanel {

    private Server server;
    private PrincipalWindow principalWindow;

    private int hora, minutos;
    private boolean conteoVotos;

    /**
     * Creates new form VotingCounter
     *
     * @param server
     * @param iMin
     * @param iHoras
     * @param principalWindow
     */
    public VotingCounter(Server server, int iMin, int iHoras, PrincipalWindow principalWindow) {
        initComponents();
        this.server = server;
        this.principalWindow = principalWindow;
        this.conteoVotos = false;
        this.minutos = iMin;
        this.hora = iHoras;
        this.server.setPeriodoVotacion(true);
        this.cronometro.start();
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        Crono = new javax.swing.JLabel();
        jLabel1 = new javax.swing.JLabel();
        jLabel2 = new javax.swing.JLabel();
        BotonIrAlSTV = new javax.swing.JButton();
        EtiquetaVotacionFinalizada = new javax.swing.JLabel();

        setBackground(new java.awt.Color(255, 255, 255));

        Crono.setFont(new java.awt.Font("Arial Black", 1, 24)); // NOI18N
        Crono.setText("jLabel1");

        jLabel1.setText("Votación habilitada");

        jLabel2.setText("La votación termina en:");

        BotonIrAlSTV.setText("Conteo de votos");
        BotonIrAlSTV.setEnabled(false);
        BotonIrAlSTV.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                BotonIrAlSTVActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(this);
        this.setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                .addContainerGap(288, Short.MAX_VALUE)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(EtiquetaVotacionFinalizada)
                    .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                        .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                            .addGap(178, 178, 178)
                            .addComponent(BotonIrAlSTV))
                        .addGroup(layout.createSequentialGroup()
                            .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                .addGroup(layout.createSequentialGroup()
                                    .addGap(56, 56, 56)
                                    .addComponent(jLabel1))
                                .addComponent(jLabel2))
                            .addGap(145, 145, 145))
                        .addComponent(Crono, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)))
                .addGap(221, 221, 221))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGap(156, 156, 156)
                .addComponent(jLabel1)
                .addGap(29, 29, 29)
                .addComponent(jLabel2)
                .addGap(27, 27, 27)
                .addComponent(Crono)
                .addGap(55, 55, 55)
                .addComponent(EtiquetaVotacionFinalizada)
                .addGap(36, 36, 36)
                .addComponent(BotonIrAlSTV)
                .addContainerGap(211, Short.MAX_VALUE))
        );
    }// </editor-fold>//GEN-END:initComponents

    private void BotonIrAlSTVActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_BotonIrAlSTVActionPerformed
        if (conteoVotos) {
            //El codigo para ir al siguiente frame
            ContabilizarVotos contabilizarVotos = new ContabilizarVotos(server);
            principalWindow.addPanel(contabilizarVotos);
        } else {
            JOptionPane.showMessageDialog(null, "La votación aún no termina. Espere que finalice.");
        }
    }//GEN-LAST:event_BotonIrAlSTVActionPerformed


    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton BotonIrAlSTV;
    private javax.swing.JLabel Crono;
    private javax.swing.JLabel EtiquetaVotacionFinalizada;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel2;
    // End of variables declaration//GEN-END:variables

    Thread cronometro = new Thread() {
        @Override
        public void run() {
            int phora = hora, min = minutos, seg = 0;
            boolean start = true;
            while (start){
                try {
                    seg--;
                    if (seg < 0) {
                        seg = 59;
                        min--;
                    }
                    if (min < 0) {
                        seg = 59;
                        min = 59;
                        phora--;
                    }
                    if (phora == 0) {
                        if (min == 0 && seg == 0) {
                            Crono.setText(phora + ":" + min + ":" + seg);
                            conteoVotos = true;
                            server.setPeriodoVotacion(false);
                            start = false;
                            EtiquetaVotacionFinalizada.setText("La votacion ha terminado");                           
                            principalWindow.getContentPane().getParent().repaint();
                            BotonIrAlSTV.setEnabled(true);
                            principalWindow.enableCounterViewItem();
                        }
                    }
                    String tiempo = phora < 10 ? "0" + phora + ":" : phora + ":";
                    tiempo += min < 10 ? "0" + min + ":" : min + ":";
                    tiempo += seg < 10 ? "0" + seg + ":" : seg + "";
                    Crono.setText(tiempo);
                    Thread.sleep(999);
                } catch (InterruptedException e) {

                }
            }
        }
    };
}
